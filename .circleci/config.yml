version: 2.1
executors:
  docker-publisher:
    environment:
      GITHUB_REPO: teknofile/docker-cacti
      IMAGE_NAME: teknofile/tkf-docker-cacti
      #DOCKER_CLI_EXPERIMENTAL: enabled
      DOCKER_BUILDKIT: 1
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: Testing Docker
          command: docker version
      - run:
          name: Build Docker Image
          command: docker build -t ${IMAGE_NAME}:latest .
      - run:
          name: Archive Docker Image
          command: docker save -o image.tar ${IMAGE_NAME}:latest
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load Docker Image From Workspace
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker To Docker Hub
          command: |
            echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
            docker tag ${IMAGE_NAME}:latest ${IMAGE_NAME}:${CIRCLE_SHA1}
            docker push ${IMAGE_NAME}:latest
            docker push ${IMAGE_NAME}:${CIRCLE_SHA1}
      - run:
          name: Sync Read-Mes
          command: > 
              docker run --rm=true 
              -e DOCKERHUB_USERNAME="${DOCKER_USER}" -e DOCKERHUB_PASSWORD="${DOCKER_PASS}"
              -e GIT_REPOSITORY=${GITHUB_REPO}
              -e DOCKER_REPOSITORY=${IMAGE_NAME}
              -e GIT_BRANCH=${CIRCLE_BRANCH}
              lsiodev/readme-sync bash -c 'node sync'
  publish-tag:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load Archived Docker Image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image and Tags
          command: |
            echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
            IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
            docker tag ${IMAGE_NAME}:latest ${IMAGE_NAME}:${CIRCLE_SHA1}
            docker tag ${IMAGE_NAME}:latest ${IMAGE_NAME}:${IMAGE_TAG}
            docker push ${IMAGE_NAME}:latest
            docker push ${IMAGE_NAME}:${CIRCLE_SHA1}
            docker push ${IMAGE_NAME}:${IMAGE_TAG}
workflows:
  version: 2
  build-master:
    jobs:
      - build:
          context: DockerPublishInfo
          filters:
            branches:
              only: master
      - publish-latest:
          context: DockerPublishInfo
          requires:
            - build
          filters:
            branches:
              only: master
  build-tags:
    jobs:
      - build:
          context: DockerPublishInfo
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-tag:
          context: DockerPublishInfo
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
